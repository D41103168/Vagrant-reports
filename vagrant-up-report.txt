$ vagrant up
Bringing machine 'project-local' up with 'virtualbox' provider...
==> project-local: Preparing master VM for linked clones...
    project-local: This is a one time operation. Once the master VM is prepared,
    project-local: it will be used as a base for linked clones, making the creation
    project-local: of new VMs take milliseconds on a modern system.
==> project-local: Importing base box 'geerlingguy/ubuntu1604'...
==> project-local: Cloning VM...
==> project-local: Matching MAC address for NAT networking...
==> project-local: Checking if box 'geerlingguy/ubuntu1604' version '1.3.1' is up to date...
==> project-local: Setting the name of the VM: project-local.local
==> project-local: Clearing any previously set network interfaces...
==> project-local: Preparing network interfaces based on configuration...
    project-local: Adapter 1: nat
    project-local: Adapter 2: hostonly
==> project-local: Forwarding ports...
    project-local: 22 (guest) => 2222 (host) (adapter 1)
==> project-local: Running 'pre-boot' VM customizations...
==> project-local: Booting VM...
==> project-local: Waiting for machine to boot. This may take a few minutes...
    project-local: SSH address: 127.0.0.1:2222
    project-local: SSH username: vagrant
    project-local: SSH auth method: private key
==> project-local: Machine booted and ready!
[project-local] GuestAdditions 6.0.14 running --- OK.
==> project-local: Checking for guest additions in VM...
==> project-local: [vagrant-hostsupdater] Checking for host entries
==> project-local: [vagrant-hostsupdater]   found entry for: 192.168.234.176 project-local.local
==> project-local: [vagrant-hostsupdater]   found entry for: 192.168.234.176 becker.local
==> project-local: [vagrant-hostsupdater]   found entry for: 192.168.234.176 adminer.project-local.local
==> project-local: [vagrant-hostsupdater]   found entry for: 192.168.234.176 xhprof.project-local.local
==> project-local: [vagrant-hostsupdater]   found entry for: 192.168.234.176 pimpmylog.project-local.local
==> project-local: [vagrant-hostsupdater]   found entry for: 192.168.234.176 192.168.234.176
==> project-local: [vagrant-hostsupdater]   found entry for: 192.168.234.176 dashboard.project-local.local
==> project-local: Setting hostname...
==> project-local: Configuring and enabling network interfaces...
==> project-local: Mounting shared folders...
    project-local: /vagrant => C:/www/vagrant/becker-ecom
    project-local: /var/www/project-local => C:/www/vagrant/becker-ecom
==> project-local: Running provisioner: drupalvm (ansible_local)...
    project-local: Installing Ansible...
    project-local: Installing pip... (for Ansible installation)
    project-local: Running ansible-playbook...

PLAY [all] *********************************************************************

TASK [Gathering Facts] *********************************************************
ok: [project-local]

TASK [Include OS-specific variables.] ******************************************
ok: [project-local]

TASK [Define config_dir.] ******************************************************
skipping: [project-local]

TASK [Include optional configuration files.] ***********************************
ok: [project-local] => (item=/vagrant/box/config.yml)

TASK [Configure toggle vars for Debian/Ubuntu.] ********************************
ok: [project-local]

TASK [Configure toggle vars for CentOS.] ***************************************
skipping: [project-local]

TASK [Ensure Apache is stopped and disabled if Nginx is used.] *****************
skipping: [project-local]

TASK [Ensure Nginx is stopped and disabled if Apache is used.] *****************
ok: [project-local]

TASK [Ensure MySQL is stopped and disabled if Postgres is used.] ***************
skipping: [project-local]

TASK [Ensure Postgres is stopped and disabled if MySQL is used.] ***************
ok: [project-local]

TASK [nginx_hosts shim] ********************************************************
ok: [project-local]

TASK [include_tasks] ***********************************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/tasks/init-Debian.yml for project-local

TASK [Update apt cache if needed.] *********************************************
ok: [project-local]

TASK [Install required dependencies.] ******************************************
changed: [project-local]

TASK [Add repository for Apache 2.4.9+ (Ubuntu 12/14).] ************************
skipping: [project-local]

TASK [Define php_xhprof_html_dir.] *********************************************
skipping: [project-local]

TASK [Run configured pre-provision shell scripts.] *****************************

TASK [Run configured pre-provision ansible task files.] ************************
included: /vagrant/box/pre_provision/pre-provision.yml for project-local

TASK [Copy local settings file into place] *************************************
ok: [project-local]

TASK [Include vars of blt config yaml file into blt_config] ********************
ok: [project-local]

TASK [Populate apache_vhosts variable based off of blt] ************************
ok: [project-local] => (item=becker)

TASK [Populate apache_vhosts_ssl variable] *************************************
ok: [project-local] => (item=becker)

TASK [Populate mysql_databases variable] ***************************************
ok: [project-local] => (item={'value': {u'profile': u'atge_commerce', u'local': u'becker.local', u'remote': u'becker.01live', u'site_dir': u'prgcvt151'}, 'key': u'becker'})

TASK [Populate mysql_users variable] *******************************************
ok: [project-local] => (item={'value': {u'profile': u'atge_commerce', u'local': u'becker.local', u'remote': u'becker.01live', u'site_dir': u'prgcvt151'}, 'key': u'becker'})

TASK [Create private files directory] ******************************************
ok: [project-local] => (item={'value': {u'profile': u'atge_commerce', u'local': u'becker.local', u'remote': u'becker.01live', u'site_dir': u'prgcvt151'}, 'key': u'becker'})

TASK [Set the PHP webserver daemon correctly when nginx is in use.] ************
skipping: [project-local]

TASK [Ensure PHP version-specific workspace directory exists.] *****************
changed: [project-local]

TASK [geerlingguy.repo-remi : Install remi repo.] ******************************
skipping: [project-local]

TASK [geerlingguy.repo-remi : Import remi GPG key.] ****************************
skipping: [project-local]

TASK [drupalvm.hostname : Configure /etc/mailname (Debian).] *******************
ok: [project-local]

TASK [drupalvm.hostname : Add hostname to /etc/hosts.] *************************
changed: [project-local]

TASK [drupalvm.hostname : Configure hostname.] *********************************
ok: [project-local]

TASK [drupalvm.hostname : Set the hostname for current session.] ***************
skipping: [project-local]

TASK [geerlingguy.firewall : Ensure iptables is present.] **********************
ok: [project-local]

TASK [geerlingguy.firewall : Flush iptables the first time playbook runs.] *****
changed: [project-local]

TASK [geerlingguy.firewall : Copy firewall script into place.] *****************
changed: [project-local]

TASK [geerlingguy.firewall : Copy firewall init script into place.] ************
skipping: [project-local]

TASK [geerlingguy.firewall : Copy firewall systemd unit file into place (for systemd systems).] ***
changed: [project-local]

TASK [geerlingguy.firewall : Configure the firewall service.] ******************
changed: [project-local]

TASK [geerlingguy.firewall : Check if firewalld package is installed (on RHEL).] ***
skipping: [project-local]

TASK [geerlingguy.firewall : Disable the firewalld service (on RHEL, if configured).] ***
skipping: [project-local]

TASK [geerlingguy.firewall : Check if ufw package is installed (on Ubuntu).] ***
ok: [project-local]

TASK [geerlingguy.firewall : Disable the ufw firewall (on Ubuntu, if configured).] ***
changed: [project-local]

TASK [geerlingguy.firewall : Check if ufw package is installed (on Archlinux).] ***
skipping: [project-local]

TASK [geerlingguy.firewall : Disable the ufw firewall (on Archlinux, if configured).] ***
skipping: [project-local]

TASK [geerlingguy.git : Ensure git is installed (RedHat).] *********************
skipping: [project-local]

TASK [geerlingguy.git : Update apt cache (Debian).] ****************************
ok: [project-local]

TASK [geerlingguy.git : Ensure git is installed (Debian).] *********************
changed: [project-local]

TASK [geerlingguy.git : Include OS-specific variables (RedHat).] ***************
skipping: [project-local]

TASK [geerlingguy.git : Include OS-specific variables (Fedora).] ***************
skipping: [project-local]

TASK [geerlingguy.git : Include OS-specific variables (Debian).] ***************
skipping: [project-local]

TASK [geerlingguy.git : Define git_install_from_source_dependencies.] **********
skipping: [project-local]

TASK [geerlingguy.git : Ensure git's dependencies are installed (RedHat).] *****
skipping: [project-local]

TASK [geerlingguy.git : Ensure git's dependencies are installed (Debian).] *****
skipping: [project-local]

TASK [geerlingguy.git : Get installed version.] ********************************
skipping: [project-local]

TASK [geerlingguy.git : Force git install if the version numbers do not match.] ***
skipping: [project-local]

TASK [geerlingguy.git : Download git.] *****************************************
skipping: [project-local]

TASK [geerlingguy.git : Expand git archive.] ***********************************
skipping: [project-local]

TASK [geerlingguy.git : Build git.] ********************************************
skipping: [project-local] => (item=all)
skipping: [project-local] => (item=install)

TASK [geerlingguy.postfix : Ensure postfix is installed.] **********************
changed: [project-local]

TASK [geerlingguy.postfix : Update Postfix configuration.] *********************
changed: [project-local] => (item={u'name': u'inet_interfaces', u'value': u'localhost'})
ok: [project-local] => (item={u'name': u'inet_protocols', u'value': u'all'})

TASK [geerlingguy.postfix : Ensure postfix is started and enabled at boot.] ****
ok: [project-local]

TASK [geerlingguy.apache : Include OS-specific variables.] *********************
ok: [project-local]

TASK [geerlingguy.apache : Include variables for Amazon Linux.] ****************
skipping: [project-local]

TASK [geerlingguy.apache : Define apache_packages.] ****************************
ok: [project-local]

TASK [geerlingguy.apache : include_tasks] **************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.apache/tasks/setup-Debian.yml for project-local

TASK [geerlingguy.apache : Update apt cache.] **********************************
ok: [project-local]

TASK [geerlingguy.apache : Ensure Apache is installed on Debian.] **************
changed: [project-local]

TASK [geerlingguy.apache : Get installed version of Apache.] *******************
ok: [project-local]

TASK [geerlingguy.apache : Create apache_version variable.] ********************
ok: [project-local]

TASK [geerlingguy.apache : Include Apache 2.2 variables.] **********************
skipping: [project-local]

TASK [geerlingguy.apache : Include Apache 2.4 variables.] **********************
ok: [project-local]

TASK [geerlingguy.apache : Configure Apache.] **********************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.apache/tasks/configure-Debian.yml for project-local

TASK [geerlingguy.apache : Configure Apache.] **********************************
ok: [project-local] => (item={u'regexp': u'^Listen ', u'line': u'Listen 80'})

TASK [geerlingguy.apache : Enable Apache mods.] ********************************
changed: [project-local] => (item=expires.load)
changed: [project-local] => (item=headers.load)
changed: [project-local] => (item=ssl.load)
changed: [project-local] => (item=rewrite.load)
changed: [project-local] => (item=proxy.load)
changed: [project-local] => (item=proxy_fcgi.load)

TASK [geerlingguy.apache : Disable Apache mods.] *******************************

TASK [geerlingguy.apache : Check whether certificates defined in vhosts exist.] ***
ok: [project-local] => (item={'extra_parameters': u'<FilesMatch \\.php$>\n  SetHandler "proxy:fcgi://127.0.0.1:9000"\n</FilesMatch>\n', 'servername': u'becker.local', 'certificate_file': u'/etc/ssl/certs/ssl-cert-snakeoil.pem', 'certificate_key_file': u'/etc/ssl/private/ssl-cert-snakeoil.key', 'documentroot': u'/var/www/project-local/docroot'})

TASK [geerlingguy.apache : Add apache vhosts configuration.] *******************
changed: [project-local]

TASK [geerlingguy.apache : Add vhost symlink in sites-enabled.] ****************
changed: [project-local]

TASK [geerlingguy.apache : Remove default vhost in sites-enabled.] *************
changed: [project-local]

TASK [geerlingguy.apache : Ensure Apache has selected state and enabled on boot.] ***
ok: [project-local]

TASK [geerlingguy.apache : Include OS-specific variables.] *********************
ok: [project-local]

TASK [geerlingguy.apache : Include variables for Amazon Linux.] ****************
skipping: [project-local]

TASK [geerlingguy.apache : Define apache_packages.] ****************************
skipping: [project-local]

TASK [geerlingguy.apache : include_tasks] **************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.apache/tasks/setup-Debian.yml for project-local

TASK [geerlingguy.apache : Update apt cache.] **********************************
ok: [project-local]

TASK [geerlingguy.apache : Ensure Apache is installed on Debian.] **************
ok: [project-local]

TASK [geerlingguy.apache : Get installed version of Apache.] *******************
ok: [project-local]

TASK [geerlingguy.apache : Create apache_version variable.] ********************
ok: [project-local]

TASK [geerlingguy.apache : Include Apache 2.2 variables.] **********************
skipping: [project-local]

TASK [geerlingguy.apache : Include Apache 2.4 variables.] **********************
ok: [project-local]

TASK [geerlingguy.apache : Configure Apache.] **********************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.apache/tasks/configure-Debian.yml for project-local

TASK [geerlingguy.apache : Configure Apache.] **********************************
ok: [project-local] => (item={u'regexp': u'^Listen ', u'line': u'Listen 80'})

TASK [geerlingguy.apache : Enable Apache mods.] ********************************
ok: [project-local] => (item=expires.load)
ok: [project-local] => (item=headers.load)
ok: [project-local] => (item=ssl.load)
ok: [project-local] => (item=rewrite.load)
ok: [project-local] => (item=proxy.load)
ok: [project-local] => (item=proxy_fcgi.load)

TASK [geerlingguy.apache : Disable Apache mods.] *******************************

TASK [geerlingguy.apache : Check whether certificates defined in vhosts exist.] ***
ok: [project-local] => (item={'extra_parameters': u'<FilesMatch \\.php$>\n  SetHandler "proxy:fcgi://127.0.0.1:9000"\n</FilesMatch>\n', 'servername': u'becker.local', 'certificate_file': u'/etc/ssl/certs/ssl-cert-snakeoil.pem', 'certificate_key_file': u'/etc/ssl/private/ssl-cert-snakeoil.key', 'documentroot': u'/var/www/project-local/docroot'})

TASK [geerlingguy.apache : Add apache vhosts configuration.] *******************
ok: [project-local]

TASK [geerlingguy.apache : Add vhost symlink in sites-enabled.] ****************
ok: [project-local]

TASK [geerlingguy.apache : Remove default vhost in sites-enabled.] *************
ok: [project-local]

TASK [geerlingguy.apache : Ensure Apache has selected state and enabled on boot.] ***
ok: [project-local]

TASK [geerlingguy.apache-php-fpm : Enable mod_proxy_fcgi.] *********************
ok: [project-local] => (item=proxy.load)
ok: [project-local] => (item=proxy_fcgi.load)

TASK [geerlingguy.nginx : Include OS-specific variables.] **********************
skipping: [project-local]

TASK [geerlingguy.nginx : Define nginx_user.] **********************************
skipping: [project-local]

TASK [geerlingguy.nginx : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.nginx : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.nginx : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.nginx : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.nginx : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.nginx : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.nginx : Remove default nginx vhost config file (if configured).] ***
skipping: [project-local]

TASK [geerlingguy.nginx : Ensure nginx_vhost_path exists.] *********************
skipping: [project-local]

TASK [geerlingguy.nginx : Add managed vhost config files.] *********************
skipping: [project-local] => (item={u'is_php': True, u'root': u'/var/www/project-local/docroot', u'server_name': u'project-local.local www.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/opt/adminer', u'server_name': u'adminer.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/usr/share/php/xhprof_html', u'server_name': u'xhprof.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/usr/share/php/pimpmylog', u'server_name': u'pimpmylog.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/var/www/dashboard', u'server_name': u'192.168.234.176 dashboard.project-local.local'})

TASK [geerlingguy.nginx : Remove managed vhost config files.] ******************
skipping: [project-local] => (item={u'is_php': True, u'root': u'/var/www/project-local/docroot', u'server_name': u'project-local.local www.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/opt/adminer', u'server_name': u'adminer.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/usr/share/php/xhprof_html', u'server_name': u'xhprof.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/usr/share/php/pimpmylog', u'server_name': u'pimpmylog.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/var/www/dashboard', u'server_name': u'192.168.234.176 dashboard.project-local.local'})

TASK [geerlingguy.nginx : Remove legacy vhosts.conf file.] *********************
skipping: [project-local]

TASK [geerlingguy.nginx : Copy nginx configuration in place.] ******************
skipping: [project-local]

TASK [geerlingguy.nginx : Ensure nginx is started and enabled to start at boot.] ***
skipping: [project-local]

TASK [geerlingguy.php-versions : Include OS-specific variables.] ***************
ok: [project-local] => (item=/vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php-versions/vars/Debian.yml)

TASK [geerlingguy.php-versions : Define PHP variables.] ************************
ok: [project-local] => (item={'value': u'__php_extension_conf_paths', 'key': u'php_extension_conf_paths'})
ok: [project-local] => (item={'value': u'__php_fpm_daemon', 'key': u'php_fpm_daemon'})
ok: [project-local] => (item={'value': u'__php_uploadprogress_module_path', 'key': u'php_uploadprogress_module_path'})
ok: [project-local] => (item={'value': u'__php_xhprof_module_path', 'key': u'php_xhprof_module_path'})
ok: [project-local] => (item={'value': u'__php_fpm_pool_conf_path', 'key': u'php_fpm_pool_conf_path'})
ok: [project-local] => (item={'value': u'__php_conf_paths', 'key': u'php_conf_paths'})
ok: [project-local] => (item={'value': u'__php_xdebug_module_path', 'key': u'php_xdebug_module_path'})
ok: [project-local] => (item={'value': u'__php_pgsql_package', 'key': u'php_pgsql_package'})
ok: [project-local] => (item={'value': u'__php_packages', 'key': u'php_packages'})
ok: [project-local] => (item={'value': u'__php_mysql_package', 'key': u'php_mysql_package'})
ok: [project-local] => (item={'value': u'__php_memcached_package', 'key': u'php_memcached_package'})
ok: [project-local] => (item={'value': u'__php_fpm_conf_path', 'key': u'php_fpm_conf_path'})
ok: [project-local] => (item={'value': u'__php_tideways_module_path', 'key': u'php_tideways_module_path'})
ok: [project-local] => (item={'value': u'__php_redis_package', 'key': u'php_redis_package'})

TASK [geerlingguy.php-versions : Define php_install_recommends variable.] ******
ok: [project-local]

TASK [geerlingguy.php-versions : include_tasks] ********************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php-versions/tasks/setup-Debian.yml for project-local

TASK [geerlingguy.php-versions : Set the correct opcache filename (Ubuntu/Debian).] ***
ok: [project-local]

TASK [geerlingguy.php-versions : Add repository for PHP versions (Ubuntu).] ****
changed: [project-local]

TASK [geerlingguy.php-versions : Add repository for PHP 5 compatibility packages (Ubuntu).] ***
skipping: [project-local]

TASK [geerlingguy.php-versions : Add dependencies for PHP versions (Debian).] ***
skipping: [project-local]

TASK [geerlingguy.php-versions : Add Ondrej Sury's apt key (Debian).] **********
skipping: [project-local]

TASK [geerlingguy.php-versions : Add Ondrej Sury's repo (Debian).] *************
skipping: [project-local]

TASK [geerlingguy.php-versions : Update apt caches after repo is added (Debian).] ***
skipping: [project-local]

TASK [geerlingguy.php-versions : Purge PHP version packages.] ******************
[DEPRECATION WARNING]: Invoking "apt" only once while using a loop via
squash_actions is deprecated. Instead of using a loop to supply multiple items
and specifying `name: "{{ item }}"`, please use `name: ['php5.6-common',
'php7.0-common', 'php7.1-common', 'php7.2-common', 'php7.3-common']` and remove
 the loop. This feature will be removed in version 2.11. Deprecation warnings
can be disabled by setting deprecation_warnings=False in ansible.cfg.
ok: [project-local] => (item=[u'php5.6-common', u'php7.0-common', u'php7.2-common', u'php7.3-common'])

TASK [geerlingguy.php-versions : Set the correct XHProf package when PHP 5.6 is used.] ***
skipping: [project-local]

TASK [geerlingguy.php : Include OS-specific variables.] ************************
ok: [project-local]

TASK [geerlingguy.php : Define php_packages.] **********************************
skipping: [project-local]

TASK [geerlingguy.php : Define extra php_packages.] ****************************
ok: [project-local]

TASK [geerlingguy.php : Define php_webserver_daemon.] **************************
ok: [project-local]

TASK [geerlingguy.php : Define php_conf_paths.] ********************************
skipping: [project-local]

TASK [geerlingguy.php : Define php_extension_conf_paths.] **********************
skipping: [project-local]

TASK [geerlingguy.php : Define php_apc_conf_filename.] *************************
ok: [project-local]

TASK [geerlingguy.php : Define php_opcache_conf_filename (Ubuntu 16.04).] ******
skipping: [project-local]

TASK [geerlingguy.php : Define php_opcache_conf_filename.] *********************
skipping: [project-local]

TASK [geerlingguy.php : Define php_fpm_conf_path.] *****************************
skipping: [project-local]

TASK [geerlingguy.php : include_tasks] *****************************************
skipping: [project-local]

TASK [geerlingguy.php : include_tasks] *****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php/tasks/setup-Debian.yml for project-local

TASK [geerlingguy.php : Update apt cache.] *************************************
ok: [project-local]

TASK [geerlingguy.php : Ensure PHP packages are installed.] ********************
changed: [project-local]

TASK [geerlingguy.php : Delete APCu configuration file if this role will provide one.] ***
skipping: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : Delete OpCache configuration file if this role will provide one.] ***
changed: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
ok: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
changed: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : include_tasks] *****************************************
skipping: [project-local]

TASK [geerlingguy.php : include_tasks] *****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php/tasks/configure.yml for project-local

TASK [geerlingguy.php : Ensure configuration directories exist.] ***************
ok: [project-local] => (item=/etc/php/7.1/fpm)
changed: [project-local] => (item=/etc/php/7.1/apache2)
ok: [project-local] => (item=/etc/php/7.1/cli)
ok: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
changed: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
ok: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : Place PHP configuration file in place.] ****************
changed: [project-local] => (item=/etc/php/7.1/fpm)
changed: [project-local] => (item=/etc/php/7.1/apache2)
changed: [project-local] => (item=/etc/php/7.1/cli)

TASK [geerlingguy.php : include_tasks] *****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php/tasks/configure-apcu.yml for project-local

TASK [geerlingguy.php : Check for existing APCu config files.] *****************
ok: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
ok: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
ok: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : Remove any non-role-supplied APCu config files.] *******

TASK [geerlingguy.php : Ensure APCu config file is present.] *******************
skipping: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : Remove APCu config file if APC is disabled.] ***********
changed: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
ok: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
changed: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : include_tasks] *****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php/tasks/configure-opcache.yml for project-local

TASK [geerlingguy.php : Check for existing OpCache config files.] **************
ok: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
ok: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
ok: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : Remove any non-role-supplied OpCache config files.] ****

TASK [geerlingguy.php : Ensure OpCache config file is present.] ****************
[DEPRECATION WARNING]: evaluating 1 as a bare variable, this behaviour will go
away and you might need to add |bool to the expression in the future. Also see
CONDITIONAL_BARE_VARS configuration toggle.. This feature will be removed in
version 2.12. Deprecation warnings can be disabled by setting
deprecation_warnings=False in ansible.cfg.
changed: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
changed: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
changed: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : Remove OpCache config file if OpCache is disabled.] ****
skipping: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : include_tasks] *****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php/tasks/configure-fpm.yml for project-local

TASK [geerlingguy.php : Define php_fpm_daemon.] ********************************
skipping: [project-local]

TASK [geerlingguy.php : Define php_fpm_pool_conf_path.] ************************
skipping: [project-local]

TASK [geerlingguy.php : Define php_fpm_pool_user.] *****************************
ok: [project-local]

TASK [geerlingguy.php : Define php_fpm_pool_group.] ****************************
ok: [project-local]

TASK [geerlingguy.php : Stat php_fpm_pool_conf_path] ***************************
ok: [project-local]

TASK [geerlingguy.php : Ensure the default pool directory exists.] *************
skipping: [project-local]

TASK [geerlingguy.php : Ensure the default pool exists.] ***********************
ok: [project-local]

TASK [geerlingguy.php : Configure php-fpm pool (if enabled).] ******************
ok: [project-local] => (item={u'regexp': u'^user.?=.+$', u'line': u'user = www-data'})
ok: [project-local] => (item={u'regexp': u'^group.?=.+$', u'line': u'group = www-data'})
ok: [project-local] => (item={u'regexp': u'^listen.?=.+$', u'line': u'listen = 127.0.0.1:9000'})
ok: [project-local] => (item={u'regexp': u'^listen\\.allowed_clients.?=.+$', u'line': u'listen.allowed_clients = 127.0.0.1'})
ok: [project-local] => (item={u'regexp': u'^pm\\.max_children.?=.+$', u'line': u'pm.max_children = 50'})
ok: [project-local] => (item={u'regexp': u'^pm\\.start_servers.?=.+$', u'line': u'pm.start_servers = 5'})
ok: [project-local] => (item={u'regexp': u'^pm\\.min_spare_servers.?=.+$', u'line': u'pm.min_spare_servers = 5'})
ok: [project-local] => (item={u'regexp': u'^pm\\.max_spare_servers.?=.+$', u'line': u'pm.max_spare_servers = 5'})

TASK [geerlingguy.php : Ensure php-fpm is started and enabled at boot (if configured).] ***
ok: [project-local]

TASK [geerlingguy.php : Ensure php-fpm is started and enabled at boot (if configured, Debian).] ***
skipping: [project-local]

TASK [geerlingguy.php : Include OS-specific variables.] ************************
ok: [project-local]

TASK [geerlingguy.php : Define php_packages.] **********************************
skipping: [project-local]

TASK [geerlingguy.php : Define extra php_packages.] ****************************
ok: [project-local]

TASK [geerlingguy.php : Define php_webserver_daemon.] **************************
skipping: [project-local]

TASK [geerlingguy.php : Define php_conf_paths.] ********************************
skipping: [project-local]

TASK [geerlingguy.php : Define php_extension_conf_paths.] **********************
skipping: [project-local]

TASK [geerlingguy.php : Define php_apc_conf_filename.] *************************
skipping: [project-local]

TASK [geerlingguy.php : Define php_opcache_conf_filename (Ubuntu 16.04).] ******
skipping: [project-local]

TASK [geerlingguy.php : Define php_opcache_conf_filename.] *********************
skipping: [project-local]

TASK [geerlingguy.php : Define php_fpm_conf_path.] *****************************
skipping: [project-local]

TASK [geerlingguy.php : include_tasks] *****************************************
skipping: [project-local]

TASK [geerlingguy.php : include_tasks] *****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php/tasks/setup-Debian.yml for project-local

TASK [geerlingguy.php : Update apt cache.] *************************************
ok: [project-local]

TASK [geerlingguy.php : Ensure PHP packages are installed.] ********************
ok: [project-local]

TASK [geerlingguy.php : Delete APCu configuration file if this role will provide one.] ***
skipping: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : Delete OpCache configuration file if this role will provide one.] ***
skipping: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : include_tasks] *****************************************
skipping: [project-local]

TASK [geerlingguy.php : include_tasks] *****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php/tasks/configure.yml for project-local

TASK [geerlingguy.php : Ensure configuration directories exist.] ***************
ok: [project-local] => (item=/etc/php/7.1/fpm)
ok: [project-local] => (item=/etc/php/7.1/apache2)
ok: [project-local] => (item=/etc/php/7.1/cli)
ok: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
ok: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
ok: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : Place PHP configuration file in place.] ****************
ok: [project-local] => (item=/etc/php/7.1/fpm)
ok: [project-local] => (item=/etc/php/7.1/apache2)
ok: [project-local] => (item=/etc/php/7.1/cli)

TASK [geerlingguy.php : include_tasks] *****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php/tasks/configure-apcu.yml for project-local

TASK [geerlingguy.php : Check for existing APCu config files.] *****************
ok: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
ok: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
ok: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : Remove any non-role-supplied APCu config files.] *******

TASK [geerlingguy.php : Ensure APCu config file is present.] *******************
skipping: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : Remove APCu config file if APC is disabled.] ***********
ok: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
ok: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
ok: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : include_tasks] *****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php/tasks/configure-opcache.yml for project-local

TASK [geerlingguy.php : Check for existing OpCache config files.] **************
ok: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
ok: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
ok: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : Remove any non-role-supplied OpCache config files.] ****
skipping: [project-local] => (item=[{'ansible_loop_var': u'item', 'item': u'/etc/php/7.1/fpm/conf.d', u'changed': False, 'failed': False, u'examined': 37, u'invocation': {u'module_args': {u'excludes': None, u'paths': [u'/etc/php/7.1/fpm/conf.d'], u'file_type': u'file', u'age': None, u'contains': u'zend_extension(\\s+)?=(\\s+)?opcache\\.so', u'recurse': False, u'age_stamp': u'mtime', u'patterns': [u'*'], u'depth': None, u'get_checksum': False, u'use_regex': False, u'follow': False, u'hidden': False, u'size': None}}, u'msg': u'', u'matched': 1}, {u'islnk': False, u'uid': 0, u'rgrp': True, u'xoth': False, u'rusr': True, u'woth': False, u'nlink': 1, u'issock': False, u'mtime': 1573822779.4441473, u'gr_name': u'root', u'path': u'/etc/php/7.1/fpm/conf.d/10-opcache.ini', u'xusr': False, u'atime': 1573822786.6077273, u'inode': 4852915, u'isgid': False, u'size': 303, u'isdir': False, u'ctime': 1573822779.5441973, u'roth': True, u'isblk': False, u'xgrp': False, u'isuid': False, u'dev': 64512, u'wgrp': False, u'isreg': True, u'isfifo': False, u'mode': u'0644', u'pw_name': u'root', u'gid': 0, u'ischr': False, u'wusr': True}])
skipping: [project-local] => (item=[{'ansible_loop_var': u'item', 'item': u'/etc/php/7.1/apache2/conf.d', u'changed': False, 'failed': False, u'examined': 1, u'invocation': {u'module_args': {u'excludes': None, u'paths': [u'/etc/php/7.1/apache2/conf.d'], u'file_type': u'file', u'age': None, u'contains': u'zend_extension(\\s+)?=(\\s+)?opcache\\.so', u'recurse': False, u'age_stamp': u'mtime', u'patterns': [u'*'], u'depth': None, u'get_checksum': False, u'use_regex': False, u'follow': False, u'hidden': False, u'size': None}}, u'msg': u'', u'matched': 1}, {u'islnk': False, u'uid': 0, u'rgrp': True, u'xoth': False, u'rusr': True, u'woth': False, u'nlink': 1, u'issock': False, u'mtime': 1573822779.6922715, u'gr_name': u'root', u'path': u'/etc/php/7.1/apache2/conf.d/10-opcache.ini', u'xusr': False, u'atime': 1573822786.7357914, u'inode': 4852916, u'isgid': False, u'size': 303, u'isdir': False, u'ctime': 1573822779.7963233, u'roth': True, u'isblk': False, u'xgrp': False, u'isuid': False, u'dev': 64512, u'wgrp': False, u'isreg': True, u'isfifo': False, u'mode': u'0644', u'pw_name': u'root', u'gid': 0, u'ischr': False, u'wusr': True}])
skipping: [project-local] => (item=[{'ansible_loop_var': u'item', 'item': u'/etc/php/7.1/cli/conf.d', u'changed': False, 'failed': False, u'examined': 37, u'invocation': {u'module_args': {u'excludes': None, u'paths': [u'/etc/php/7.1/cli/conf.d'], u'file_type': u'file', u'age': None, u'contains': u'zend_extension(\\s+)?=(\\s+)?opcache\\.so', u'recurse': False, u'age_stamp': u'mtime', u'patterns': [u'*'], u'depth': None, u'get_checksum': False, u'use_regex': False, u'follow': False, u'hidden': False, u'size': None}}, u'msg': u'', u'matched': 1}, {u'islnk': False, u'uid': 0, u'rgrp': True, u'xoth': False, u'rusr': True, u'woth': False, u'nlink': 1, u'issock': False, u'mtime': 1573822779.9403954, u'gr_name': u'root', u'path': u'/etc/php/7.1/cli/conf.d/10-opcache.ini', u'xusr': False, u'atime': 1573822786.8678575, u'inode': 4852917, u'isgid': False, u'size': 303, u'isdir': False, u'ctime': 1573822780.0444474, u'roth': True, u'isblk': False, u'xgrp': False, u'isuid': False, u'dev': 64512, u'wgrp': False, u'isreg': True, u'isfifo': False, u'mode': u'0644', u'pw_name': u'root', u'gid': 0, u'ischr': False, u'wusr': True}])

TASK [geerlingguy.php : Ensure OpCache config file is present.] ****************
[DEPRECATION WARNING]: evaluating 1 as a bare variable, this behaviour will go
away and you might need to add |bool to the expression in the future. Also see
CONDITIONAL_BARE_VARS configuration toggle.. This feature will be removed in
version 2.12. Deprecation warnings can be disabled by setting
deprecation_warnings=False in ansible.cfg.
ok: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
ok: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
ok: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : Remove OpCache config file if OpCache is disabled.] ****
skipping: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php : include_tasks] *****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php/tasks/configure-fpm.yml for project-local

TASK [geerlingguy.php : Define php_fpm_daemon.] ********************************
skipping: [project-local]

TASK [geerlingguy.php : Define php_fpm_pool_conf_path.] ************************
skipping: [project-local]

TASK [geerlingguy.php : Define php_fpm_pool_user.] *****************************
skipping: [project-local]

TASK [geerlingguy.php : Define php_fpm_pool_group.] ****************************
skipping: [project-local]

TASK [geerlingguy.php : Stat php_fpm_pool_conf_path] ***************************
ok: [project-local]

TASK [geerlingguy.php : Ensure the default pool directory exists.] *************
skipping: [project-local]

TASK [geerlingguy.php : Ensure the default pool exists.] ***********************
ok: [project-local]

TASK [geerlingguy.php : Configure php-fpm pool (if enabled).] ******************
ok: [project-local] => (item={u'regexp': u'^user.?=.+$', u'line': u'user = www-data'})
ok: [project-local] => (item={u'regexp': u'^group.?=.+$', u'line': u'group = www-data'})
ok: [project-local] => (item={u'regexp': u'^listen.?=.+$', u'line': u'listen = 127.0.0.1:9000'})
ok: [project-local] => (item={u'regexp': u'^listen\\.allowed_clients.?=.+$', u'line': u'listen.allowed_clients = 127.0.0.1'})
ok: [project-local] => (item={u'regexp': u'^pm\\.max_children.?=.+$', u'line': u'pm.max_children = 50'})
ok: [project-local] => (item={u'regexp': u'^pm\\.start_servers.?=.+$', u'line': u'pm.start_servers = 5'})
ok: [project-local] => (item={u'regexp': u'^pm\\.min_spare_servers.?=.+$', u'line': u'pm.min_spare_servers = 5'})
ok: [project-local] => (item={u'regexp': u'^pm\\.max_spare_servers.?=.+$', u'line': u'pm.max_spare_servers = 5'})

TASK [geerlingguy.php : Ensure php-fpm is started and enabled at boot (if configured).] ***
ok: [project-local]

TASK [geerlingguy.php : Ensure php-fpm is started and enabled at boot (if configured, Debian).] ***
skipping: [project-local]

TASK [geerlingguy.php-pecl : Include OS-Specific variables.] *******************
ok: [project-local] => (item=/vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php-pecl/vars/Debian.yml)

TASK [geerlingguy.php-pecl : Ensure pecl is installed (if configured).] ********
skipping: [project-local]

TASK [geerlingguy.php-pecl : Install PECL libaries.] ***************************

TASK [geerlingguy.composer : Set php_executable variable to a default if not defined.] ***
skipping: [project-local]

TASK [geerlingguy.composer : Check if Composer is installed.] ******************
ok: [project-local]

TASK [geerlingguy.composer : Get Composer installer signature.] ****************
ok: [project-local]

TASK [geerlingguy.composer : Download Composer installer.] *********************
changed: [project-local]

TASK [geerlingguy.composer : Run Composer installer.] **************************
changed: [project-local]

TASK [geerlingguy.composer : Move Composer into globally-accessible location.] ***
changed: [project-local]

TASK [geerlingguy.composer : Update Composer to latest version (if configured).] ***
skipping: [project-local]

TASK [geerlingguy.composer : Ensure composer directory exists.] ****************
changed: [project-local]

TASK [geerlingguy.composer : Add GitHub OAuth token for Composer (if configured).] ***
skipping: [project-local]

TASK [geerlingguy.composer : include_tasks] ************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.composer/tasks/global-require.yml for project-local

TASK [geerlingguy.composer : Install configured globally-required packages.] ***
changed: [project-local] => (item={u'release': u'^0.3', u'name': u'hirak/prestissimo'})

TASK [geerlingguy.composer : Add composer_home_path bin directory to global $PATH.] ***
changed: [project-local]

TASK [geerlingguy.composer : include_tasks] ************************************
skipping: [project-local]

TASK [geerlingguy.mysql : include_tasks] ***************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.mysql/tasks/variables.yml for project-local

TASK [geerlingguy.mysql : Include OS-specific variables.] **********************
ok: [project-local] => (item=/vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.mysql/vars/Debian.yml)

TASK [geerlingguy.mysql : Include OS-specific variables (RedHat).] *************
skipping: [project-local]

TASK [geerlingguy.mysql : Define mysql_packages.] ******************************
ok: [project-local]

TASK [geerlingguy.mysql : Define mysql_daemon.] ********************************
skipping: [project-local]

TASK [geerlingguy.mysql : Define mysql_slow_query_log_file.] *******************
ok: [project-local]

TASK [geerlingguy.mysql : Define mysql_log_error.] *****************************
ok: [project-local]

TASK [geerlingguy.mysql : Define mysql_syslog_tag.] ****************************
ok: [project-local]

TASK [geerlingguy.mysql : Define mysql_pid_file.] ******************************
ok: [project-local]

TASK [geerlingguy.mysql : Define mysql_config_file.] ***************************
ok: [project-local]

TASK [geerlingguy.mysql : Define mysql_config_include_dir.] ********************
ok: [project-local]

TASK [geerlingguy.mysql : Define mysql_socket.] ********************************
ok: [project-local]

TASK [geerlingguy.mysql : Define mysql_supports_innodb_large_prefix.] **********
ok: [project-local]

TASK [geerlingguy.mysql : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.mysql : include_tasks] ***************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.mysql/tasks/setup-Debian.yml for project-local

TASK [geerlingguy.mysql : Check if MySQL is already installed.] ****************
ok: [project-local]

TASK [geerlingguy.mysql : Update apt cache if MySQL is not yet installed.] *****
ok: [project-local]

TASK [geerlingguy.mysql : Determine required MySQL Python libraries.] **********
ok: [project-local]

TASK [geerlingguy.mysql : Ensure MySQL Python libraries are installed.] ********
changed: [project-local]

TASK [geerlingguy.mysql : Ensure MySQL packages are installed.] ****************
changed: [project-local]

TASK [geerlingguy.mysql : Ensure MySQL is stopped after initial install.] ******
changed: [project-local]

TASK [geerlingguy.mysql : Delete innodb log files created by apt package after initial install.] ***
changed: [project-local] => (item=ib_logfile0)
changed: [project-local] => (item=ib_logfile1)

TASK [geerlingguy.mysql : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.mysql : Check if MySQL packages were installed.] *************
ok: [project-local]

TASK [geerlingguy.mysql : include_tasks] ***************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.mysql/tasks/configure.yml for project-local

TASK [geerlingguy.mysql : Get MySQL version.] **********************************
ok: [project-local]

TASK [geerlingguy.mysql : Copy my.cnf global MySQL configuration.] *************
changed: [project-local]

TASK [geerlingguy.mysql : Verify mysql include directory exists.] **************
skipping: [project-local]

TASK [geerlingguy.mysql : Copy my.cnf override files into include directory.] ***

TASK [geerlingguy.mysql : Create slow query log file (if configured).] *********
changed: [project-local]

TASK [geerlingguy.mysql : Create datadir if it does not exist] *****************
changed: [project-local]

TASK [geerlingguy.mysql : Set ownership on slow query log file (if configured).] ***
changed: [project-local]

TASK [geerlingguy.mysql : Create error log file (if configured).] **************
changed: [project-local]

TASK [geerlingguy.mysql : Set ownership on error log file (if configured).] ****
changed: [project-local]

TASK [geerlingguy.mysql : Ensure MySQL is started and enabled on boot.] ********
changed: [project-local]

TASK [geerlingguy.mysql : include_tasks] ***************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.mysql/tasks/secure-installation.yml for project-local

TASK [geerlingguy.mysql : Ensure default user is present.] *********************
skipping: [project-local]

TASK [geerlingguy.mysql : Copy user-my.cnf file with password credentials.] ****
skipping: [project-local]

TASK [geerlingguy.mysql : Disallow root login remotely] ************************
ok: [project-local] => (item=DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'))

TASK [geerlingguy.mysql : Get list of hosts for the root user.] ****************
ok: [project-local]

TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (5.7.x).] ***
changed: [project-local] => (item=localhost)

TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (< 5.7.x).] ***
skipping: [project-local] => (item=localhost)

TASK [geerlingguy.mysql : Copy .my.cnf file with root password credentials.] ***
changed: [project-local]

TASK [geerlingguy.mysql : Get list of hosts for the anonymous user.] ***********
ok: [project-local]

TASK [geerlingguy.mysql : Remove anonymous MySQL users.] ***********************

TASK [geerlingguy.mysql : Remove MySQL test database.] *************************
ok: [project-local]

TASK [geerlingguy.mysql : include_tasks] ***************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.mysql/tasks/databases.yml for project-local

TASK [geerlingguy.mysql : Ensure MySQL databases are present.] *****************
changed: [project-local] => (item={u'collation': u'utf8_general_ci', u'name': u'drupal', u'encoding': u'utf8'})
changed: [project-local] => (item={'collation': u'utf8_general_ci', 'name': u'becker', 'encoding': u'utf8'})

TASK [geerlingguy.mysql : include_tasks] ***************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.mysql/tasks/users.yml for project-local

TASK [geerlingguy.mysql : Ensure MySQL users are present.] *********************
changed: [project-local] => (item=None)
changed: [project-local] => (item=None)
changed: [project-local]

TASK [geerlingguy.mysql : include_tasks] ***************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.mysql/tasks/replication.yml for project-local

TASK [geerlingguy.mysql : Ensure replication user exists on master.] ***********
skipping: [project-local]

TASK [geerlingguy.mysql : Check slave replication status.] *********************
skipping: [project-local]

TASK [geerlingguy.mysql : Check master replication status.] ********************
skipping: [project-local]

TASK [geerlingguy.mysql : Configure replication on the slave.] *****************
skipping: [project-local]

TASK [geerlingguy.mysql : Start replication.] **********************************
skipping: [project-local]

TASK [geerlingguy.php-mysql : Include OS-specific variables.] ******************
ok: [project-local]

TASK [geerlingguy.php-mysql : Define php_mysql_package.] ***********************
skipping: [project-local]

TASK [geerlingguy.php-mysql : Install PHP MySQL dependencies (RedHat).] ********
skipping: [project-local]

TASK [geerlingguy.php-mysql : Install PHP MySQL dependencies (Debian).] ********
changed: [project-local]

TASK [geerlingguy.postgresql : include_tasks] **********************************
skipping: [project-local]

TASK [geerlingguy.postgresql : include_tasks] **********************************
skipping: [project-local]

TASK [geerlingguy.postgresql : include_tasks] **********************************
skipping: [project-local]

TASK [geerlingguy.postgresql : include_tasks] **********************************
skipping: [project-local]

TASK [geerlingguy.postgresql : include_tasks] **********************************
skipping: [project-local]

TASK [geerlingguy.postgresql : Ensure PostgreSQL is started and enabled on boot.] ***
skipping: [project-local]

TASK [geerlingguy.postgresql : Ensure PostgreSQL databases are present.] *******
skipping: [project-local] => (item={u'name': u'drupal'})

TASK [geerlingguy.postgresql : Ensure PostgreSQL users are present.] ***********
skipping: [project-local] => (item=None)
skipping: [project-local]

TASK [geerlingguy.php-pgsql : Include OS-specific variables.] ******************
skipping: [project-local]

TASK [geerlingguy.php-pgsql : Define php_pgsql_package.] ***********************
skipping: [project-local]

TASK [geerlingguy.php-pgsql : Install PHP PostgreSQL dependencies (RedHat).] ***
skipping: [project-local]

TASK [geerlingguy.php-pgsql : Install PHP PostgreSQL dependencies (Debian).] ***
skipping: [project-local]

TASK [geerlingguy.drupal-console : Ensure pip is available for an extra dependency on Ubuntu 14.04.] ***
skipping: [project-local] => (item=python-pip)
skipping: [project-local] => (item=python-openssl)
skipping: [project-local] => (item=python-pyasn1)

TASK [geerlingguy.drupal-console : Upgrade setuptools on Ubuntu 14.04.] ********
skipping: [project-local]

TASK [geerlingguy.drupal-console : Ensure ndg-httpsclient is available on Ubuntu 14.04.] ***
skipping: [project-local]

TASK [geerlingguy.drupal-console : Install Drupal Console.] ********************
skipping: [project-local]

TASK [geerlingguy.drupal-console : Ensure Drupal Console is executable.] *******
skipping: [project-local]

TASK [geerlingguy.drupal-console : Update Drupal Console to latest version (if configured).] ***
skipping: [project-local]

TASK [geerlingguy.drush : include_tasks] ***************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.drush/tasks/install-drush-launcher.yml for project-local

TASK [geerlingguy.drush : Check current state.] ********************************
ok: [project-local]

TASK [geerlingguy.drush : Perform cleanup of old symlink.] *********************
skipping: [project-local]

TASK [geerlingguy.drush : Ensure Drush path directory exists.] *****************
ok: [project-local]

TASK [geerlingguy.drush : Install Drush.] **************************************
changed: [project-local]

TASK [geerlingguy.drush : Ensure Drush is executable.] *************************
changed: [project-local]

TASK [geerlingguy.drush : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.drush : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.memcached : Include OS-specific variables.] ******************
ok: [project-local]

TASK [geerlingguy.memcached : Define memcached_user.] **************************
ok: [project-local]

TASK [geerlingguy.memcached : Update apt cache.] *******************************
ok: [project-local]

TASK [geerlingguy.memcached : Install Memcached.] ******************************
changed: [project-local]

TASK [geerlingguy.memcached : Copy Memcached configuration.] *******************
changed: [project-local]

TASK [geerlingguy.memcached : Ensure Memcached is started and set to run on startup.] ***
ok: [project-local]

TASK [geerlingguy.php-memcached : Include OS-specific variables.] **************
ok: [project-local]

TASK [geerlingguy.php-memcached : Define php_memcached_package.] ***************
skipping: [project-local]

TASK [geerlingguy.php-memcached : Install PHP Memcached extension (RedHat).] ***
skipping: [project-local]

TASK [geerlingguy.php-memcached : Install PHP Memcached extension (Debian).] ***
changed: [project-local]

TASK [geerlingguy.php-tideways : Include OS-specific variables.] ***************
skipping: [project-local]

TASK [geerlingguy.php-tideways : Define php_tideways_module_path.] *************
skipping: [project-local]

TASK [geerlingguy.php-tideways : Define php_tideways_config_filename.] *********
skipping: [project-local]

TASK [geerlingguy.php-tideways : Ensure dependencies for installing Tideways are present.] ***
skipping: [project-local] => (item=make)
skipping: [project-local] => (item=gcc)
skipping: [project-local] => (item=unzip)

TASK [geerlingguy.php-tideways : Download and untar Tideways.] *****************
skipping: [project-local]

TASK [geerlingguy.php-tideways : Build Tideways.] ******************************
skipping: [project-local] => (item=phpize)
skipping: [project-local] => (item=./configure)
skipping: [project-local] => (item=make)
skipping: [project-local] => (item=make install)

TASK [geerlingguy.php-tideways : Ensure Tideways module path exists.] **********
skipping: [project-local]

TASK [geerlingguy.php-tideways : Move Tideways module into place.] *************
skipping: [project-local]

TASK [geerlingguy.php-tideways : include_tasks] ********************************
skipping: [project-local]

TASK [geerlingguy.php-tideways : include_tasks] ********************************
skipping: [project-local]

TASK [geerlingguy.php-xdebug : Include OS-specific variables.] *****************
ok: [project-local]

TASK [geerlingguy.php-xdebug : Define php_xdebug_module_path.] *****************
skipping: [project-local]

TASK [geerlingguy.php-xdebug : Define php_xdebug_config_filename.] *************
ok: [project-local]

TASK [geerlingguy.php-xdebug : Ensure dependencies for building from source are installed (RedHat).] ***
skipping: [project-local]

TASK [geerlingguy.php-xdebug : Ensure dependencies for building from source are installed (Debian).] ***
ok: [project-local]

TASK [geerlingguy.php-xdebug : Untar Xdebug.] **********************************
changed: [project-local]

TASK [geerlingguy.php-xdebug : Build Xdebug.] **********************************
changed: [project-local] => (item=phpize)
changed: [project-local] => (item=./configure)
changed: [project-local] => (item=make)

TASK [geerlingguy.php-xdebug : Ensure Xdebug module path exists.] **************
changed: [project-local]

TASK [geerlingguy.php-xdebug : Move Xdebug module into place.] *****************
changed: [project-local]

TASK [geerlingguy.php-xdebug : include_tasks] **********************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.php-xdebug/tasks/configure.yml for project-local

TASK [geerlingguy.php-xdebug : Copy xdebug ini into main extension config folder.] ***
changed: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
changed: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.php-xdebug : Disable xdebug for PHP CLI.] ********************
ok: [project-local]

TASK [geerlingguy.php-xhprof : Include OS-specific variables.] *****************
skipping: [project-local]

TASK [geerlingguy.php-xhprof : Define php_xhprof_module_path.] *****************
skipping: [project-local]

TASK [geerlingguy.php-xhprof : Define php_xhprof_config_filename.] *************
skipping: [project-local]

TASK [geerlingguy.php-xhprof : Ensure dependencies for installing XHProf are present.] ***
skipping: [project-local] => (item=make)
skipping: [project-local] => (item=gcc)
skipping: [project-local] => (item=unzip)
skipping: [project-local] => (item=graphviz)

TASK [geerlingguy.php-xhprof : Download and untar XHProf.] *********************
skipping: [project-local]

TASK [geerlingguy.php-xhprof : Build XHProf.] **********************************
skipping: [project-local] => (item=phpize)
skipping: [project-local] => (item=./configure)
skipping: [project-local] => (item=make)

TASK [geerlingguy.php-xhprof : Ensure XHProf module path exists.] **************
skipping: [project-local]

TASK [geerlingguy.php-xhprof : Move XHProf module into place.] *****************
skipping: [project-local]

TASK [geerlingguy.php-xhprof : Move XHProf PHP library into place.] ************
skipping: [project-local]

TASK [geerlingguy.php-xhprof : Move XHProf UI into place.] *********************
skipping: [project-local]

TASK [geerlingguy.php-xhprof : include_tasks] **********************************
skipping: [project-local]

TASK [geerlingguy.php-xhprof : Ensure XHProf output directory exists.] *********
skipping: [project-local]

TASK [thom8.php-upload-progress : Include OS-specific variables.] **************
skipping: [project-local]

TASK [thom8.php-upload-progress : Define php_uploadprogress_module_path.] ******
skipping: [project-local]

TASK [thom8.php-upload-progress : Define php_uploadprogress_config_filename.] ***
skipping: [project-local]

TASK [thom8.php-upload-progress : Download and untar uploadprogress.] **********
skipping: [project-local]

TASK [thom8.php-upload-progress : Build uploadprogress.] ***********************
skipping: [project-local] => (item=phpize)
skipping: [project-local] => (item=./configure)
skipping: [project-local] => (item=make)

TASK [thom8.php-upload-progress : Ensure uploadprogress module path exists.] ***
skipping: [project-local]

TASK [thom8.php-upload-progress : Move uploadprogress module into place.] ******
skipping: [project-local]

TASK [thom8.php-upload-progress : Add php extension config for uploadprogress.] ***
skipping: [project-local] => (item=/etc/php/7.1/fpm/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/apache2/conf.d)
skipping: [project-local] => (item=/etc/php/7.1/cli/conf.d)

TASK [geerlingguy.blackfire : include_tasks] ***********************************
skipping: [project-local]

TASK [geerlingguy.blackfire : include_tasks] ***********************************
skipping: [project-local]

TASK [geerlingguy.blackfire : Ensure Blackfire packages are installed.] ********
skipping: [project-local]

TASK [geerlingguy.adminer : Ensure Adminer directory exists.] ******************
changed: [project-local]

TASK [geerlingguy.adminer : Download Adminer to configured directory.] *********
changed: [project-local]

TASK [geerlingguy.adminer : Symlink Adminer into configured directories.] ******

TASK [geerlingguy.adminer : Set the proper Apache configuration directory (Debian).] ***
skipping: [project-local]

TASK [geerlingguy.adminer : Add Apache configuration file for Adminer (Debian).] ***
skipping: [project-local]

TASK [geerlingguy.adminer : Add Apache configuration file for Adminer (RedHat).] ***
skipping: [project-local]

TASK [geerlingguy.pimpmylog : Clone Pimp my Log.] ******************************
skipping: [project-local]

TASK [geerlingguy.pimpmylog : Grant all privileges on the Pimp my Log directory.] ***
skipping: [project-local]

TASK [geerlingguy.daemonize : Download daemonize archive.] *********************
changed: [project-local]

TASK [geerlingguy.daemonize : Expand daemonize archive.] ***********************
changed: [project-local]

TASK [geerlingguy.daemonize : Check if daemonize is installed.] ****************
ok: [project-local]

TASK [geerlingguy.daemonize : Build daemonize.] ********************************
changed: [project-local] => (item=./configure --prefix=/usr)
changed: [project-local] => (item=make)
changed: [project-local] => (item=make install)

TASK [geerlingguy.daemonize : Download daemonize archive.] *********************
ok: [project-local]

TASK [geerlingguy.daemonize : Expand daemonize archive.] ***********************
skipping: [project-local]

TASK [geerlingguy.daemonize : Check if daemonize is installed.] ****************
ok: [project-local]

TASK [geerlingguy.daemonize : Build daemonize.] ********************************
skipping: [project-local] => (item=./configure --prefix=/usr)
skipping: [project-local] => (item=make)
skipping: [project-local] => (item=make install)

TASK [geerlingguy.mailhog : Ensure mailhog install directory exists.] **********
changed: [project-local]

TASK [geerlingguy.mailhog : Download MailHog and mhsendmail binaries.] *********
changed: [project-local] => (item={u'url': u'https://github.com/mailhog/MailHog/releases/download/v0.2.1/MailHog_linux_amd64', u'dest': u'/opt/mailhog/mailhog'})
changed: [project-local] => (item={u'url': u'https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64', u'dest': u'/opt/mailhog/mhsendmail'})

TASK [geerlingguy.mailhog : Copy mailhog init script into place.] **************
skipping: [project-local]

TASK [geerlingguy.mailhog : Copy mailhog systemd unit file into place (for systemd systems).] ***
changed: [project-local]

TASK [geerlingguy.mailhog : Ensure mailhog is enabled and will start on boot.] ***
changed: [project-local]

TASK [franklinkim.newrelic : Checking for key] *********************************
skipping: [project-local]

TASK [franklinkim.newrelic : Installing dependencies] **************************
skipping: [project-local]

TASK [franklinkim.newrelic : Adding APT key] ***********************************
skipping: [project-local]

TASK [franklinkim.newrelic : Add APT repository] *******************************
skipping: [project-local]

TASK [franklinkim.newrelic : Installing packages] ******************************
[DEPRECATION WARNING]: Invoking "apt" only once while using a loop via
squash_actions is deprecated. Instead of using a loop to supply multiple items
and specifying `pkg: "{{ item }}"`, please use `pkg: ['newrelic-sysmond']` and
remove the loop. This feature will be removed in version 2.11. Deprecation
warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.
skipping: [project-local] => (item=[])

TASK [franklinkim.newrelic : Installing dependencies] **************************
skipping: [project-local]

TASK [franklinkim.newrelic : Installing packages] ******************************
[DEPRECATION WARNING]: Invoking "yum" only once while using a loop via
squash_actions is deprecated. Instead of using a loop to supply multiple items
and specifying `name: "{{ item }}"`, please use `name: ['newrelic-sysmond']`
and remove the loop. This feature will be removed in version 2.11. Deprecation
warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.
skipping: [project-local] => (item=[])

TASK [franklinkim.newrelic : Configuring module] *******************************
skipping: [project-local] => (item=etc/newrelic/nrsysmond.cfg)

TASK [franklinkim.newrelic : Configuring user groups] **************************
skipping: [project-local]

TASK [franklinkim.newrelic : Configuring service] ******************************
skipping: [project-local]

TASK [geerlingguy.nodejs : Set up the Nodesource RPM directory for Node.js > 0.10.] ***
skipping: [project-local]

TASK [geerlingguy.nodejs : Set up the Nodesource RPM variable for Node.js == 0.10.] ***
skipping: [project-local]

TASK [geerlingguy.nodejs : Import Nodesource RPM key (CentOS < 7).] ************
skipping: [project-local]

TASK [geerlingguy.nodejs : Import Nodesource RPM key (CentOS 7+)..] ************
skipping: [project-local]

TASK [geerlingguy.nodejs : Add Nodesource repositories for Node.js (CentOS < 7).] ***
skipping: [project-local]

TASK [geerlingguy.nodejs : Add Nodesource repositories for Node.js (CentOS 7+).] ***
skipping: [project-local]

TASK [geerlingguy.nodejs : Ensure Node.js and npm are installed.] **************
skipping: [project-local]

TASK [geerlingguy.nodejs : Ensure apt-transport-https is installed.] ***********
ok: [project-local]

TASK [geerlingguy.nodejs : Add Nodesource apt key.] ****************************
changed: [project-local]

TASK [geerlingguy.nodejs : Add NodeSource repositories for Node.js.] ***********
changed: [project-local] => (item=deb https://deb.nodesource.com/node_8.x xenial main)
changed: [project-local] => (item=deb-src https://deb.nodesource.com/node_8.x xenial main)

TASK [geerlingguy.nodejs : Update apt cache if repo was added.] ****************
ok: [project-local]

TASK [geerlingguy.nodejs : Ensure Node.js and npm are installed.] **************
changed: [project-local]

TASK [geerlingguy.nodejs : Define nodejs_install_npm_user] *********************
skipping: [project-local]

TASK [geerlingguy.nodejs : Create npm global directory] ************************
changed: [project-local]

TASK [geerlingguy.nodejs : Add npm_config_prefix bin directory to global $PATH.] ***
changed: [project-local]

TASK [geerlingguy.nodejs : Ensure npm global packages are installed.] **********
changed: [project-local] => (item={u'name': u'bower'})
changed: [project-local] => (item={u'name': u'gulp-cli'})
changed: [project-local] => (item={u'name': u'yarn'})

TASK [geerlingguy.nodejs : Install packages defined in a given package.json.] ***
skipping: [project-local]

TASK [geerlingguy.redis : Include OS-specific variables.] **********************
skipping: [project-local]

TASK [geerlingguy.redis : Define redis_package.] *******************************
skipping: [project-local]

TASK [geerlingguy.redis : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.redis : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.redis : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.redis : Ensure Redis is configured.] *************************
skipping: [project-local]

TASK [geerlingguy.redis : Ensure Redis is running and enabled on boot.] ********
skipping: [project-local]

TASK [geerlingguy.php-redis : Include OS-specific variables.] ******************
skipping: [project-local]

TASK [geerlingguy.php-redis : Define php_redis_package.] ***********************
skipping: [project-local]

TASK [geerlingguy.php-redis : Install PhpRedis extension (RedHat).] ************
skipping: [project-local]

TASK [geerlingguy.php-redis : Install PhpRedis extension (Debian).] ************
skipping: [project-local]

TASK [geerlingguy.php-redis : include_tasks] ***********************************
skipping: [project-local]

TASK [geerlingguy.ruby : include_tasks] ****************************************
skipping: [project-local]

TASK [geerlingguy.ruby : include_tasks] ****************************************
skipping: [project-local]

TASK [geerlingguy.ruby : include_tasks] ****************************************
skipping: [project-local]

TASK [geerlingguy.ruby : Add user installed RubyGems bin directory to global $PATH.] ***
skipping: [project-local]

TASK [geerlingguy.ruby : Install Bundler.] *************************************
skipping: [project-local]

TASK [geerlingguy.ruby : Install configured gems.] *****************************

TASK [geerlingguy.java : Include OS-specific variables for Fedora or FreeBSD.] ***
skipping: [project-local]

TASK [geerlingguy.java : Include version-specific variables for CentOS/RHEL.] ***
skipping: [project-local]

TASK [geerlingguy.java : Include version-specific variables for Ubuntu.] *******
ok: [project-local]

TASK [geerlingguy.java : Include version-specific variables for Debian.] *******
ok: [project-local]

TASK [geerlingguy.java : Define java_packages.] ********************************
ok: [project-local]

TASK [geerlingguy.java : include_tasks] ****************************************
skipping: [project-local]

TASK [geerlingguy.java : include_tasks] ****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.java/tasks/setup-Debian.yml for project-local

TASK [geerlingguy.java : Ensure 'man' directory exists.] ***********************
skipping: [project-local]

TASK [geerlingguy.java : Ensure Java is installed.] ****************************
changed: [project-local]

TASK [geerlingguy.java : include_tasks] ****************************************
skipping: [project-local]

TASK [geerlingguy.java : Set JAVA_HOME if configured.] *************************
skipping: [project-local]

TASK [arknoll.selenium : Include OS-Specific variables] ************************
ok: [project-local]

TASK [arknoll.selenium : Install dependencies] *********************************
ok: [project-local]

TASK [arknoll.selenium : create directory] *************************************
changed: [project-local]

TASK [arknoll.selenium : Download Selenium] ************************************
changed: [project-local]

TASK [arknoll.selenium : Install FireFox (if configured)] **********************
skipping: [project-local]

TASK [arknoll.selenium : Add Chrome key (if configured, Debian)] ***************
changed: [project-local]

TASK [arknoll.selenium : Add Chrome repo (if configured, Debian)] **************
changed: [project-local]

TASK [arknoll.selenium : Install Chrome (if configured, Debian)] ***************
changed: [project-local]

TASK [arknoll.selenium : Install Chrome (if configured, RedHat)] ***************
skipping: [project-local]

TASK [arknoll.selenium : Get the latest release for chromedriver] **************
ok: [project-local]

TASK [arknoll.selenium : Install chromedriver] *********************************
changed: [project-local]

TASK [arknoll.selenium : Install xvfb] *****************************************
changed: [project-local]

TASK [arknoll.selenium : Install init script] **********************************
skipping: [project-local]

TASK [arknoll.selenium : Install systemd unit file (for systemd systems)] ******
changed: [project-local]

TASK [arknoll.selenium : Register systemd service status (for systemd systems)] ***
fatal: [project-local]: FAILED! => {"changed": false, "cmd": "systemctl status selenium | grep \"active (running)\"", "delta": "0:00:00.005251", "end": "2019-11-15 13:08:15.137718", "msg": "non-zero return code", "rc": 1, "start": "2019-11-15 13:08:15.132467", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
...ignoring

TASK [arknoll.selenium : Ensure selenium is running] ***************************
changed: [project-local]

TASK [geerlingguy.solr : Ensure solr_user group exists.] ***********************
changed: [project-local]

TASK [geerlingguy.solr : Ensure solr_user exists.] *****************************
changed: [project-local]

TASK [geerlingguy.solr : Set solr_filename for Solr 4+.] ***********************
ok: [project-local]

TASK [geerlingguy.solr : Set solr_filename for Solr 3.x.] **********************
skipping: [project-local]

TASK [geerlingguy.solr : Check if Solr has been installed already.] ************
ok: [project-local]

TASK [geerlingguy.solr : Download Solr.] ***************************************
changed: [project-local]

TASK [geerlingguy.solr : Expand Solr.] *****************************************
changed: [project-local]

TASK [geerlingguy.solr : include_tasks] ****************************************
skipping: [project-local]

TASK [geerlingguy.solr : include_tasks] ****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.solr/tasks/install.yml for project-local

TASK [geerlingguy.solr : Ensure dependencies are installed.] *******************
ok: [project-local] => (item=lsof)
ok: [project-local] => (item=acl)
ok: [project-local] => (item=sudo)

TASK [geerlingguy.solr : Run Solr installation script.] ************************
changed: [project-local]

TASK [geerlingguy.solr : Ensure solr is stopped (RHEL 7 workaround).] **********
skipping: [project-local]

TASK [geerlingguy.solr : Run systemd daemon_reload (RHEL 7 workaround).] *******
skipping: [project-local]

TASK [geerlingguy.solr : Ensure solr is started and enabled on boot if configured.] ***
ok: [project-local]

TASK [geerlingguy.solr : include_tasks] ****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.solr/tasks/configure.yml for project-local

TASK [geerlingguy.solr : Remove existing SOLR_HEAP configuration.] *************
changed: [project-local]

TASK [geerlingguy.solr : Apply Solr configuration changes.] ********************
changed: [project-local] => (item={u'regexp': u'^.?SOLR_JAVA_MEM=', u'line': u'SOLR_JAVA_MEM="-Xms64M -Xmx128M"'})
ok: [project-local] => (item={u'regexp': u'^SOLR_PORT=', u'line': u'SOLR_PORT="8983"'})
changed: [project-local] => (item={u'regexp': u'^.?SOLR_TIMEZONE=', u'line': u'SOLR_TIMEZONE="UTC"'})

TASK [geerlingguy.solr : include_tasks] ****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.solr/tasks/cores.yml for project-local

TASK [geerlingguy.solr : Check current list of Solr cores.] ********************
ok: [project-local]

TASK [geerlingguy.solr : Ensure Solr conf directories exist.] ******************
changed: [project-local] => (item=collection1)

TASK [geerlingguy.solr : Ensure core configuration directories exist.] *********
changed: [project-local] => (item=collection1)

TASK [geerlingguy.solr : Create configured cores.] *****************************
changed: [project-local] => (item=collection1)

TASK [geerlingguy.solr : include_tasks] ****************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.solr/tasks/trim-fat.yml for project-local

TASK [geerlingguy.solr : Remove the downloaded Solr archive.] ******************
changed: [project-local] => (item=/root/solr-5.5.3.tgz)
changed: [project-local] => (item=/root/solr-5.5.3)

TASK [geerlingguy.solr : Remove docs, if not needed.] **************************
skipping: [project-local]

TASK [geerlingguy.solr : Remove example dir, if not needed.] *******************
skipping: [project-local]

TASK [geerlingguy.java : Include OS-specific variables for Fedora or FreeBSD.] ***
skipping: [project-local]

TASK [geerlingguy.java : Include version-specific variables for CentOS/RHEL.] ***
skipping: [project-local]

TASK [geerlingguy.java : Include version-specific variables for Ubuntu.] *******
skipping: [project-local]

TASK [geerlingguy.java : Include version-specific variables for Debian.] *******
skipping: [project-local]

TASK [geerlingguy.java : Define java_packages.] ********************************
skipping: [project-local]

TASK [geerlingguy.java : include_tasks] ****************************************
skipping: [project-local]

TASK [geerlingguy.java : include_tasks] ****************************************
skipping: [project-local]

TASK [geerlingguy.java : include_tasks] ****************************************
skipping: [project-local]

TASK [geerlingguy.java : Set JAVA_HOME if configured.] *************************
skipping: [project-local]

TASK [geerlingguy.elasticsearch : include_tasks] *******************************
skipping: [project-local]

TASK [geerlingguy.elasticsearch : include_tasks] *******************************
skipping: [project-local]

TASK [geerlingguy.elasticsearch : Install Elasticsearch.] **********************
skipping: [project-local]

TASK [geerlingguy.elasticsearch : Configure Elasticsearch.] ********************
skipping: [project-local]

TASK [geerlingguy.elasticsearch : Start Elasticsearch.] ************************
skipping: [project-local]

TASK [geerlingguy.elasticsearch : Make sure Elasticsearch is running before proceeding.] ***
skipping: [project-local]

TASK [geerlingguy.varnish : Include OS-specific variables.] ********************
skipping: [project-local]

TASK [geerlingguy.varnish : Set the packagecloud repository name based on the version.] ***
skipping: [project-local]

TASK [geerlingguy.varnish : include_tasks] *************************************
skipping: [project-local]

TASK [geerlingguy.varnish : include_tasks] *************************************
skipping: [project-local]

TASK [geerlingguy.varnish : Ensure Varnish config path exists.] ****************
skipping: [project-local]

TASK [geerlingguy.varnish : Copy Varnish configuration (sysvinit).] ************
skipping: [project-local]

TASK [geerlingguy.varnish : Copy Debian Jessie/Xenial specific Varnish configs (systemd).] ***
skipping: [project-local]

TASK [geerlingguy.varnish : Copy Varnish configuration (systemd).] *************
skipping: [project-local]

TASK [geerlingguy.varnish : Copy Varnish default VCL.] *************************
skipping: [project-local]

TASK [geerlingguy.varnish : Copy varnish secret.] ******************************
skipping: [project-local]

TASK [geerlingguy.varnish : Ensure Varnish services are started and enabled on startup.] ***
skipping: [project-local] => (item=varnish)

TASK [geerlingguy.varnish : Ensure Varnish services are started enabled on startup (Xenial specific)] ***
skipping: [project-local] => (item=varnish)

TASK [geerlingguy.nginx : Include OS-specific variables.] **********************
skipping: [project-local]

TASK [geerlingguy.nginx : Define nginx_user.] **********************************
skipping: [project-local]

TASK [geerlingguy.nginx : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.nginx : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.nginx : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.nginx : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.nginx : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.nginx : include_tasks] ***************************************
skipping: [project-local]

TASK [geerlingguy.nginx : Remove default nginx vhost config file (if configured).] ***
skipping: [project-local]

TASK [geerlingguy.nginx : Ensure nginx_vhost_path exists.] *********************
skipping: [project-local]

TASK [geerlingguy.nginx : Add managed vhost config files.] *********************
skipping: [project-local] => (item={u'is_php': True, u'root': u'/var/www/project-local/docroot', u'server_name': u'project-local.local www.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/opt/adminer', u'server_name': u'adminer.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/usr/share/php/xhprof_html', u'server_name': u'xhprof.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/usr/share/php/pimpmylog', u'server_name': u'pimpmylog.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/var/www/dashboard', u'server_name': u'192.168.234.176 dashboard.project-local.local'})

TASK [geerlingguy.nginx : Remove managed vhost config files.] ******************
skipping: [project-local] => (item={u'is_php': True, u'root': u'/var/www/project-local/docroot', u'server_name': u'project-local.local www.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/opt/adminer', u'server_name': u'adminer.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/usr/share/php/xhprof_html', u'server_name': u'xhprof.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/usr/share/php/pimpmylog', u'server_name': u'pimpmylog.project-local.local'})
skipping: [project-local] => (item={u'is_php': True, u'root': u'/var/www/dashboard', u'server_name': u'192.168.234.176 dashboard.project-local.local'})

TASK [geerlingguy.nginx : Remove legacy vhosts.conf file.] *********************
skipping: [project-local]

TASK [geerlingguy.nginx : Copy nginx configuration in place.] ******************
skipping: [project-local]

TASK [geerlingguy.nginx : Ensure nginx is started and enabled to start at boot.] ***
skipping: [project-local]

TASK [drupalvm.www : Define drupalvm_webserver_user (Debian).] *****************
ok: [project-local]

TASK [drupalvm.www : Define drupalvm_webserver_user (RedHat).] *****************
skipping: [project-local]

TASK [drupalvm.www : Register information about the /vagrant directory.] *******
ok: [project-local]

TASK [drupalvm.www : Ensure a group with the same GID as used to sync directories exist.] ***
skipping: [project-local]

TASK [drupalvm.www : Ensure the webserver user is in the same group as the owner of synced directories.] ***
changed: [project-local]

TASK [drupalvm.www : Ensure admin group exist.] ********************************
changed: [project-local]

TASK [drupalvm.www : Ensure vagrant user is in admin group.] *******************
changed: [project-local]

TASK [drupalvm.www : Set nicer permissions on Apache log directory.] ***********
changed: [project-local]

TASK [geerlingguy.drupal : Add backwards-compatibility shims.] *****************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/roles/geerlingguy.drupal/tasks/backwards-compatibility.yml for project-local

TASK [geerlingguy.drupal : build_makefile shim] ********************************
skipping: [project-local]

TASK [geerlingguy.drupal : build_composer shim] ********************************
skipping: [project-local]

TASK [geerlingguy.drupal : build_composer_project shim] ************************
skipping: [project-local]

TASK [geerlingguy.drupal : install_site shim] **********************************
skipping: [project-local]

TASK [geerlingguy.drupal : drupalvm_database shim] *****************************
skipping: [project-local]

TASK [geerlingguy.drupal : Check if Drupal is already set up.] *****************
ok: [project-local]

TASK [geerlingguy.drupal : Define drush_path if it's not already defined.] *****
ok: [project-local]

TASK [geerlingguy.drupal : Define drupal_site_exists.] *************************
ok: [project-local]

TASK [geerlingguy.drupal : include_tasks] **************************************
skipping: [project-local]

TASK [geerlingguy.drupal : Define drupal_deploy_updated] ***********************
ok: [project-local]

TASK [geerlingguy.drupal : include_tasks] **************************************
skipping: [project-local]

TASK [geerlingguy.drupal : include_tasks] **************************************
skipping: [project-local]

TASK [geerlingguy.drupal : include_tasks] **************************************
skipping: [project-local]

TASK [geerlingguy.drupal : include_tasks] **************************************
skipping: [project-local]

TASK [geerlingguy.drupal : Check if a project specific Drush binary exists.] ***
ok: [project-local]

TASK [geerlingguy.drupal : Use project specific Drush if available.] ***********
ok: [project-local]

TASK [geerlingguy.drupal : include_tasks] **************************************
skipping: [project-local]

TASK [geerlingguy.security : Include OS-specific variables.] *******************
skipping: [project-local]

TASK [geerlingguy.security : include_tasks] ************************************
skipping: [project-local]

TASK [geerlingguy.security : include_tasks] ************************************
skipping: [project-local]

TASK [geerlingguy.security : Ensure fail2ban is running and enabled on boot.] ***
skipping: [project-local]

TASK [geerlingguy.security : include_tasks] ************************************
skipping: [project-local]

TASK [geerlingguy.security : include_tasks] ************************************
skipping: [project-local]

TASK [geerlingguy.security : include_tasks] ************************************
skipping: [project-local]

TASK [Do not accept locale environment variables passed over SSH.] *************
changed: [project-local]

TASK [Allow client to pass PHP and XDEBUG environment variables over SSH.] *****
changed: [project-local] => (item=PHP_IDE_CONFIG)
changed: [project-local] => (item=XDEBUG_CONFIG)
changed: [project-local] => (item=PHP_OPTIONS)

TASK [Check if local known_hosts file is present.] *****************************
ok: [project-local]

TASK [Copy known_hosts file from host into Drupal VM.] *************************
skipping: [project-local]

TASK [Set SSH home directory.] *************************************************
changed: [project-local]

TASK [Install extra apt packages (if any are configured).] *********************
changed: [project-local]

TASK [Install extra yum packages (if any are configured).] *********************
skipping: [project-local]

TASK [include_tasks] ***********************************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/tasks/apparmor.yml for project-local

TASK [Detect if AppArmor is working.] ******************************************
ok: [project-local]

TASK [Ensure MySQL AppArmor profile is disabled (for slow query log).] *********
changed: [project-local]

TASK [Restart the AppArmor if necessary.] **************************************
changed: [project-local]

TASK [include_tasks] ***********************************************************
skipping: [project-local]

TASK [Ensure configured cron jobs exist in user account's crontab.] ************

TASK [include_tasks] ***********************************************************
included: /vagrant/vendor/geerlingguy/drupal-vm/provisioning/tasks/dashboard.yml for project-local

TASK [Ensure the dashboard directory exists.] **********************************
changed: [project-local]

TASK [Copy dashboard page into place.] *****************************************
changed: [project-local]

TASK [Copy phpinfo file into place.] *******************************************
changed: [project-local]

TASK [Run configured post-provision shell scripts.] ****************************
changed: [project-local] => (item=../../../acquia/blt/scripts/drupal-vm/post-provision.php)

TASK [Run configured post-provision ansible task files.] ***********************
included: /vagrant/box/post_provision/post-provision.yml for project-local

TASK [Download and extract SOLR config for Drupal] *****************************
changed: [project-local]

TASK [Ensure Solr conf directories exist.] *************************************
ok: [project-local] => (item=collection1)

TASK [Create configured cores.] ************************************************
changed: [project-local] => (item={'value': {u'profile': u'atge_commerce', u'local': u'becker.local', u'remote': u'becker.01live', u'site_dir': u'prgcvt151'}, 'key': u'becker'})

TASK [Adjust the auto commit time so index changes are committed in 1s] ********
changed: [project-local] => (item={'value': {u'profile': u'atge_commerce', u'local': u'becker.local', u'remote': u'becker.01live', u'site_dir': u'prgcvt151'}, 'key': u'becker'})

RUNNING HANDLER [geerlingguy.firewall : restart firewall] **********************
changed: [project-local]

RUNNING HANDLER [geerlingguy.postfix : restart postfix] ************************
changed: [project-local]

RUNNING HANDLER [geerlingguy.apache : restart apache] **************************
changed: [project-local]

RUNNING HANDLER [geerlingguy.php : restart webserver] **************************
changed: [project-local]

RUNNING HANDLER [geerlingguy.php : restart php-fpm] ****************************
changed: [project-local]

RUNNING HANDLER [geerlingguy.mysql : restart mysql] ****************************
[WARNING]: Ignoring "sleep" as it is not used in "systemd"
changed: [project-local]

RUNNING HANDLER [geerlingguy.memcached : restart memcached] ********************
skipping: [project-local]

RUNNING HANDLER [geerlingguy.solr : restart solr] ******************************
[WARNING]: Ignoring "sleep" as it is not used in "systemd"
changed: [project-local]

PLAY RECAP *********************************************************************
project-local               : ok=289  changed=115  unreachable=0    failed=0    skipped=304  rescued=0    ignored=1


==> project-local: Machine 'project-local' has a post `vagrant up` message. This is a message
==> project-local: from the creator of the Vagrantfile, and not from Vagrant itself:
==> project-local:
==> project-local: Your Drupal VM Vagrant box is ready to use!
==> project-local: * Visit the dashboard for an overview of your site: http://dashboard.project-local.local (or http://192.168.234.176)
==> project-local: * You can SSH into your machine with `vagrant ssh`.
==> project-local: * Find out more in the Drupal VM documentation at http://docs.drupalvm.com
